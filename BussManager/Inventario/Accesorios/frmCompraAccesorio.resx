<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIyMAAAEAIABkFAAAFgAAACgAAAAjAAAARgAAAAEAIAAAAAAAJBMAAOgDAADoAwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACElqcAg5SlAFdwigBqf5MAYHuVAFx9
        nQA3lPIAY3uTFWmHpDJifpkVhNX/AGeLrQBlgZwAa32OAM3P0ADW1tYA19fXAtfX1wHX19cA2NjYAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAISUpgB3ipwAn6WqAGZ9
        lABffJgAXH+iAGlvdANge5UdX32bT19/n5BggaPKcZe66HCYvMprkbOKZ4mpRmJ+mRXC//8AaI2xAGWC
        nwDw6+cB1tbXAdbW1gDY2NgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiJmqAGp+
        kwB0hZYAY3yVAF59mwBXgq4AZHiMCmB8mCxffp1lX4ChpmCCpNtgg6f6YISo/2GFqf92ncL/eqTJ/3ii
        x/91nsL2cJi80WyStJJoiqtNYn+cGQAAAAFqkbUAZIOgAGp+kwBgepMAgZGiAAAAAAAAAAAAAAAAAAAA
        AACCk6MAXneRAHGFmQBifZcAXn6fACi6/wBiepIUYH2aP2B/n31ggaK7YIOm6GGFqP5hhan/X4Kl/1+D
        pv9ihqr/Yoaq/3eewv97pcn/eqTJ/3qkyf96pMn/eKLH/3Odw/hwmL3WbZO2mmmMrVVjgZ8eQzw9AmuT
        uABlhKIAaoCVAFt4lAB9jqAAAAAAADRonwBNdZ4Acn+MBWJ9lyBgfpxTYIGglGCCpM5hhKfzYYWp/2CE
        qP9gg6f/W32e/1h5mf9Wd5b/WXub/2GGqv9ihqr/d57C/3umyv97pcn/eqTJ/4KpzP+0ydv/o73U/42x
        0P9+psr/dZ/E+3GavttulLeiao2uXWWDoSNYZnUFapnFAG2q4wAAAAAAXHycAFx7mw1ggaKWYYOl4GKF
        qPpihqn/YYWp/16Bo/9afJ3/WXqa/1h5mf9VdZT/U3KQ/1V1lP9cfZ//Yoar/2OHq/94n8P/fKbK/3ul
        yv97pcn/iK3P/7S6v/+en5//sre7/7C9x/+mvtH/iK3N/3qkyP94ocX9dJzA4m+WupJsk7oLbZS7AAAA
        AABWeZwAVnqdHmCEqOJjh6v/XoCi/1p7nP9Zepr/Wnub/1p7m/9ghKb/WXqa/1d3lv9VdZP/WHiX/11/
        oP9jh6v/Y4ir/3mgxP99p8v/fKbK/3ymyv+Irs//pKqv/3p6ef9+fn7/bm5u/4yMi/+ctMj/fKbL/3ym
        y/98psv/eaTJ3nCcxBtwnMQAAAAAAFd6nQBXep0eYYWp4GKGqf9cfp//W3yd/1x+oP9df6D/XX+h/2GE
        p/9ae5v/WXmZ/1Z2lf9YeZj/XX+h/2OIq/9kiKz/eqHF/36ozP99p8v/fKfL/4atzv+2vsX/np2c/4uK
        iv9lZGT/bm5t/5aswP99qMz/fafL/32ny/97pcrccp3GG3KdxgAAAAAAWHqeAFh6nh5hhqngYoeq/1+D
        pf9egaL/XYCh/1p8nP9UdJL/VHOQ/1l6mf9YeJf/VHOR/1Z2lP9dgKH/ZIis/2SJrf97osX/f6nN/36o
        zP9+qMz/f6jM/5W20v+tw9f/uMXQ/62zuP+oqar/orjM/32ozP9+qMz/fqjM/3ymy9xznsYbc57GAAAA
        AABYe54AWHueHmKGquBjiKv/XX6f/1Fvi/9bfZ7/VXST/0diev9QbYn/Wnub/1t8nP9bfJz/XH6f/11/
        oP9kia3/ZYqt/3uixv9/qs3/f6nM/3+pzP9/qcz/fajM/32ozP+Cq87/jbLS/6G+2P+Vt9T/fqjM/3+p
        zP9/qcz/fKfL3HSfxxtzn8cAAAAAAFl7nwBZfJ8eY4er4GSIrP9Zepn/TWmE/1l6mf9cfp7/V3eW/1t8
        nP9ae5v/W3yc/1t8nP9ae5v/X4Kj/2WKrv9liq7/fKPH/4Gqzv+Aqc3/gKnN/4Cpzf+Aqc3/gKnN/4Cp
        zf9/qc3/fqjN/3+pzf+Aqc3/gKnN/4Cqzf9+qMzcdaDIG3WgyAAAAAAAWXyfAFl8nx5jiKvgZIms/1t9
        nf9Zepn/XH2d/11+n/9df6D/X4Gi/2OHqf9ihqn/ZIir/2WKrf9mi6//Zouu/2aLr/99pMf/gqvP/4Gq
        zv+Bqs7/garO/4Gqzv+Bqs7/garO/4Gqzv+Bqs7/garO/4Gqzv+Bqs7/garO/3+ozdt2ockbdqHJAAAA
        AABafaAAWn2gHmSIrOBmi6//ZIir/2SJq/9mi67/Zoyv/2eMr/9njLD/Z4yv/2eMsP9mjK//Zoyv/2aM
        r/9mjK//Z4yv/36lyP+DrND/gqzP/4Ksz/+CrM//gqzP/4Ksz/+CrM//gqzP/4Ksz/+CrM//gqzP/4Ks
        z/+CrM//gKrO23eiyht3osoAAAAAAFt+oABbfqEeZYms4GiMsP9ojLD/aIyw/2iMsP9njLD/Z4yw/2eM
        sP9njLD/Z4yw/2eMsP9njLD/Z4yw/2eMsP9ojbD/f6XJ/4Wt0f+ErND/hKzQ/4Ss0P+ErND/hKzQ/4Ss
        0P+ErND/hKzQ/4Ss0P+ErND/hKzQ/4St0P+Cq8/beaPKG3ijygAAAAAAW36hAFt+oR5liq3gaI2w/2iN
        sP9ojbD/aI2w/2iNsP9ojbD/aI2w/2iNsP9ojbD/aI2w/2iNsP9ojbD/aI2w/2iNsP9/psn/hq/S/4Wu
        0f+FrtH/ha7R/4Wu0f+FrtH/ha7R/4Wu0f+FrtH/ha7R/4Wu0f+FrtH/ha7R/4Os0Nt6pMsbeqTLAAAA
        AABcf6IAXH+iHmaKruBojrH/aI6x/2iOsf9ojrH/aI6x/2iOsf9ojrH/aI6x/2iOsf9ojrH/aI6x/2iO
        sf9ojbH/aY6x/4Cnyv+HsNP/h6/S/4ev0v+Hr9L/h6/S/4ev0v+Hr9L/h6/S/4ev0v+Hr9L/h6/S/4ev
        0v+Hr9L/hK3R23ulzRp7pMwAAAAAAFx/ogBcgKMeZ4uu4GqOsv9qjrL/ao6y/2qOsv9qjrL/ao6y/2qO
        sv9qjrL/ao6y/2qOsv9qjrL/ao6y/2qOsv9qjrL/gafL/4mx1P+IsNP/iLDT/4iw0/+IsNP/iLDT/4iw
        0/+IsNP/iLDT/4iw0/+IsNP/iLDT/4iw0/+GrtLbfKbNGnylzQAAAAAAXYCjAF2Box5njK/gao+z/2qP
        s/9qj7P/ao+z/2qPs/9qj7P/ao+z/2qPs/9qj7P/ao+z/2qPs/9qj7P/ao+z/2qPs/+CqMv/irLV/4mx
        1P+JsdT/ibHU/4mx1P+JsdT/ibHU/4mx1P+JsdT/ibHU/4mx1P+JsdT/ibHU/4ev09t9p84afafOAAAA
        AABdgaQAXoGkHmiMsOBrkLP/a4+z/2uPs/9rj7P/a4+z/2uPs/9rj7P/a4+z/2uPs/9rj7P/a4+z/2uP
        s/9rj7P/a5Cz/4KpzP+Ls9b/irLV/4qy1f+KstX/irLV/4qy1f+KstX/irLV/4qy1f+KstX/irLV/4qy
        1f+KstX/iLDU23+ozxp+qM8AAAAAAF6CpABegqUeaY2w4GyQtP9rkLT/a5C0/2uQtP9rkLT/a5C0/2uQ
        tP9rkLT/a5C0/2uQtP9rkLT/a5C0/2uQtP9skLT/g6nM/4y01/+Ms9b/jLPW/4yz1v+Ms9b/jLPW/4yz
        1v+Ms9b/jLPW/4yz1v+Ms9b/jLPW/4yz1v+JsdXbgKnQGoCp0AAAAAAAX4OlAF+DpR5pjrHgbJG1/2yR
        tf9skbX/bJG1/2yRtf9skbX/bJG1/2yRtf9skbX/bJG1/2yRtf9skbX/bJG1/2yRtf+Eqs3/jbXY/420
        1/+NtNf/jbTX/4201/+NtNf/jbTX/4201/+NtNf/jbTX/4201/+NtNf/jbTX/4qy1tuBqtEagarRAAAA
        AABghKYAYISmHmqPsuBtkrX/bZK1/22Stf9tkrX/bZK1/22Stf9tkrX/bZK1/22Stf9tkrX/bZK1/22S
        tf9tkrX/bZK1/4Srzv+Pttn/jrXY/4612P+Otdj/jrXY/4612P+Otdj/jrXY/4612P+Otdj/jrXY/461
        2P+Ptdj/jLPX24Kr0hqCq9IAAAAAAGCEpgBghKYea5Cy4G6Ttv9uk7b/bpO2/26Ttv9uk7b/bpO2/26T
        tv9uk7b/bpO2/26Ttv9uk7b/bpO2/26Ttv9uk7b/havO/5C32v+Qttn/kLbZ/5C22f+Qttn/kLbZ/5C2
        2f+Qttn/kLbZ/5C22f+Qttn/kLbZ/5C22f+NtNjbg6zTGoOs0wAAAAAAYYWnAGGFpx5rkLPgbpO2/26T
        tv9uk7b/bpO2/26Ttv9uk7b/bpO2/26Ttv9uk7b/bpO2/26Ttv9uk7b/bpO2/26Ttv+GrM7/krja/5G3
        2f+Rt9n/kbfZ/5G32f+Rt9n/kbfZ/5G32f+Rt9n/kbfZ/5G32f+Rt9n/kbfZ/4612NuErdQahK3UAAAA
        AABhhacAYYWnHmyRtOBvlLf/b5S3/2+Ut/9vlLf/b5S3/2+Ut/9vlLf/b5S3/2+Ut/9vlLf/b5S3/2+U
        t/9vlLf/b5S3/4asz/+Sudv/krja/5K42v+SuNr/krja/5K42v+SuNr/krja/5K42v+SuNr/krja/5K4
        2v+SuNr/j7bZ24Wu1RqFrtUAAAAAAGKGqABihqgebZK04HCVuP9wlbj/cJW4/3CVuP9wlbj/cJW4/3CV
        uP9wlbj/cJW4/3CVuP9wlbj/cJW4/3CVuP9wlbj/h63P/5O63P+Tudv/k7nb/5O52/+Tudv/k7nb/5O5
        2/+Tudv/k7nb/5O52/+Tudv/k7nb/5O52/+Qt9rbhq/WGoau1gAAAAAAYoaoAGKHqR5tkrXgcJa4/3CV
        uP9wlbj/cJW4/3CVuP9vlLX/b5S2/2+Utv9wlbf/cJW4/3CVuP9wlbj/cJW4/3CVuP+HrdD/lLvd/5S6
        3P+Uutz/lLrc/5S63P+Uudv/k7na/5O52v+Uudv/lLrc/5S63P+Uutz/lLrc/5G429uHsNYah6/WAAAA
        AABjh6kAY4epHm6TteBxl7n/cZe5/3GXuf9xl7n/cJW2/22KpP9siKL/bImj/26Qr/9xl7n/cZe5/3GX
        uf9xl7n/cZe5/4et0P+Vu93/lbvd/5W73f+Vu93/lLrb/5Kyz/+RsMz/ka/L/5O11P+Vu93/lbvd/5W7
        3f+Vu93/krnc24ix1xqIsNcAAAAAAGOHqQBjiKoebpS233GXuf9xl7n/cZe5/3GXuf9wlbb/bIih/2yG
        nf9shp3/bo+t/3GXuf9xl7n/cZe5/3GXuf9xl7n/iK7Q/5a83v+WvN7/lrze/5a83v+Vutv/kbDM/5Gu
        yf+Rrsj/k7XT/5a83v+WvN7/lrze/5a83v+TudzbibHXGoix1wAAAAAAZIiqAGSIqh5vlbfgcpi6/3KY
        uv9ymLr/cpi6/3GWt/9tiKL/bIae/2yGnv9vkK3/cpi6/3KYuv9ymLr/cpi6/3KYuv+IrtD/l73f/5a8
        3v+WvN7/lrze/5a73P+RsMz/ka7J/5Guyf+TtdT/lrzf/5a83v+WvN7/lrze/5S63duJstgaibLYAAAA
        AABihqgAYoaoHGyRtNdvlbf7cJW4/XCWuP9xlrn/cJW2/2yIof9shp7/bIae/2+Qrf9ymLr/cpi6/3KY
        uv9ymLr/cpi6/4iu0f+Xvd//l73f/5e93/+Xvd//lrvc/5GwzP+Rrsn/ka7J/5O11P+WvN//lrze/5W8
        3v2VvN77krnd0Yix2BiIsdgAAAAAAF6AoQBegKEGY4epN2WKq0tmi6xXZ4utZGiMrnFpjK1+a4egjGyG
        nppshp2ma4ypsmyRs75skrPJbZK0026Ttdxuk7XkhqzP6JW73uKUu93Zk7rdz5O63cSSuNu4kbDLq5Gu
        yJ2RrsiPkLPSgZC33HKPtttkjrbbVo212kqLs9k0gqzWBYOt1gAAAAAAXoCiAF6AoQBkiKkAZ4ytAGmO
        rwBrkLIAb5W3AHOYugBriKMAXXiUAHKLoQJbeZcFVniZCVt+nw5egaIUYIOkG2KFpiN9pMcoi7TaIomy
        2BmHsNcShK3WDICp0weMrcoDxP2sAI+syACVuNYAlr3fAJO63QCQuNwAj7bbAIu02gCDrdYAg63WAAAA
        AAAAAAAAAAAAAFV4lQBnhqUAZYSiAF9/ngBYepsAZoSiAHSNowBxi6EAcImgAGOCoABdgKAAXoGiAF+C
        owBghKUAYoWmAH2kxwCLtNoAibHYAIew2ACGr9cAha7VAI+vzACTsMkAlbHKAJGx0AB8qNQAg6zUAJO4
        3gCErdYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/4AAB+AAAAD8AAAH4AAAAOAA
        AAHgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAA
        AAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAA
        AAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAA
        AAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAA
        AAAgAAAAwAAAAeAAAAD/////4AAAAA==
</value>
  </data>
</root>