<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAI1OAgCNTgIAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApqWVAKallQCmpZUBpqWVAqallQKmpZUCpqWVAqal
        lQKmpZUCpqWVAqallQKmpZUCpqWVAqallQKmpZUCpqWVAaallQCmpZUAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKallQCmpZYBpaSUVKWklKGlpJSkpaSUpKWk
        lKSlpJSkpaSUpKWklKSlpJSkpaSUpKWklKSlpJSkpaSUpKWklKSlpJShpaSUVKallgGmpZUAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApqWVAKWklBisqpzUsa+i/7Kv
        o/+yr6P/sq+j/7Kvo/+yr6P/srCj/7Kwo/+yr6P/sq+j/7Kvo/+yr6P/sq+j/7Gvov+sqpzUpaSUGKal
        lQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3tKkAtrSpH8K+
        tuDHw73/x8O9/8fDvf/Hw73/x8O9/8XBuv+3tKn/t7Sp/8XBuv/Hw73/x8O9/8fDvf/Hw73/x8O9/8K+
        tuC2tKkft7SpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMfD
        vQDHw70fx8O94MfDvf/Hw73/x8O9/8fDvf/Iw77/vbqx/6allf+mpZX/vbqx/8jDvv/Hw73/x8O9/8fD
        vf/Hw73/x8O94MfDvR/Hw70AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAx8O9AMfDvR/Hw73gyMS//8nFwP/Jxb//ycW//8nGwP/Ewbr/sa+i/7Gvov/Ewbr/ycbA/8nF
        v//Jxb//ycXA/8jEv//Hw73gx8O9H8fDvQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AH/+AAB//gAAf/4AAH/+AAB//gAAf/+AAf8=
</value>
  </data>
</root>